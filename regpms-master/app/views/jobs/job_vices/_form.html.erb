<% @form_defaults = {input_html: {autocomplete: :off}} %>
<% @form_defaults[:disabled] = (action_name == "show") || (@job_vice.respond_to?(:current_state) && @job_vice.current_state.meta[:disabled]) %>
<% pf_disabled = !params[:pf].blank? %>
<% is_pd_range = @job_vice.evaluation.pd_start_date <= Date.current && @job_vice.evaluation.pd_end_date >= Date.current %>
<% is_pf_range = @job_vice.evaluation.pf_start_date <= Date.current && @job_vice.evaluation.pf_end_date >= Date.current %>
<% is_confirm_range = @job_vice.evaluation.confirm_start_date <= Date.current && @job_vice.evaluation.confirm_end_date >= Date.current %>
<div data-widget-editbutton="false" id="power-forms-grid" class="powerwidget cold-grey" role="widget">
	<div class="inner-spacer" role="content">

		<%= simple_form_for(["jobs", @job_vice], html: {class: 'form-horizontal'}, defaults: @form_defaults) do |f| %>
	    	<% params[:q].each do |k,v| %>
		        <%= hidden_field_tag "q[#{k}]", v %>
		    <% end unless params[:q].blank? %>
		    <%= hidden_field_tag(:page, params[:page]) unless params[:page].blank? %>
		    <%= hidden_field_tag(:pf, params[:pf]) unless params[:pf].blank? %>
		    
		    <% if current_user.id == f.object.user.id %>
		        <%= link_to (params[:pf] ? pfs_url : pds_url), {class: "btn #{event_btn_class(:back)}"} do %>
					<%= event_icon_tag(:back) %>  <%= t(:back_to_list) %>
				<% end %>
			<% else %>
		        <%= link_to (params[:pf] ? x_pfs_url(user_id: f.object.user, q: params[:q]) : x_pds_url(user_id: f.object.user, q: params[:q])), {class: "btn #{event_btn_class(:back)}"} do %>
					<%= event_icon_tag(:back) %>  <%= t(:back_to_list) %>
				<% end %>
			<% end %>

			<legend class="no-margin"></legend>

		  	<fieldset>

		        <% if f.object.user %>
		        	<%= f.input :user, input_html: {disabled: true} %>
		        	<%= f.hidden_field :user_id %>
		        <% else %>
			        <%= f.association :user, collection: (User.all + (f.object.user.nil? ? [] : [f.object.user])).uniq.sort_by {|asso| asso.to_s}, value_method: :id, label_method: :to_s, input_html: {data: {placeholder: t(:choose)}} %>
			        <%= render partial: "/admin/users/chosen_select", locals: {object_name: :job_vice, no_create: true} %>
		        <% end %>
		        
		        <% if f.object.evaluation %>
		        	<%= f.input :evaluation, input_html: {disabled: true} %>
		        	<%= f.hidden_field :evaluation_id %>
		        <% else %>
			        <%= f.association :evaluation, collection: (Evaluation.all + (f.object.evaluation.nil? ? [] : [f.object.evaluation])).uniq.sort_by {|asso| asso.to_s}, value_method: :id, label_method: :to_s, input_html: {data: {placeholder: t(:choose)}} %>
			        <%= render partial: "/settings/evaluations/chosen_select", locals: {object_name: :job_vice, no_create: true} %>
		        <% end %>
		        
		        <% unless params[:pf].blank?%>
		        	<%= f.input :job_template, input_html: {disabled: true} %>
		        <% else %>
			        <% 
			        	job_template_group = f.object.job_template ? f.object.job_template.job_template_group : nil
			        	job_template_group_id = job_template_group ? job_template_group.id : nil
			        	job_template_options = job_template_group ? (job_template_group.job_templates.all_job_vices + (f.object.job_template.nil? ? [] : [f.object.job_template])).uniq : []
			        %>	
		        	<div class="form-group">
		        		<label class="col-md-4 control-label"><%= JobTemplateGroup.model_name.human %></label>
		        		<div class="col-md-6">
		        			<%= select :xxx, :job_template_group_id, 
		        					JobTemplateGroup.select(
		        						"job_template_groups.id, job_template_groups.name"
	        						).group(
	        							"job_template_groups.id, job_template_groups.name"
        							).joins(
        								"JOIN job_templates ON job_templates.job_template_group_id = job_template_groups.id AND job_templates.is_job_vice = TRUE"
    								).sort_by {|jtg| jtg.name}.collect {|jtg| [jtg.name, jtg.id]}, 
		        					{include_blank: true, selected: job_template_group_id}, 
		        					{class: "form-control chosen-select", "data-placeholder" => t(:choose), disabled: action_name == "show"} 
        					%>
		        		</div>
	        		</div>
			        <%= f.association :job_template, collection: job_template_options.sort_by {|asso| asso.to_s}, value_method: :id, label_method: :to_s, input_html: {data: {placeholder: t(:choose)}} %>
			        <%= render partial: "/settings/job_templates/chosen_select", locals: {object_name: :job_vice, no_create: true} %>
		        <% end %>
		        
	        	<%= f.input :name, input_html: {readonly: true, disabled: pf_disabled} %>
	        	<%= f.input :duration, input_html: {readonly: true, disabled: pf_disabled} %>
	        	<%= f.input :expect_qty, input_html: {disabled: pf_disabled} %>
	        	<%= f.input :unit, input_html: {readonly: false && true, disabled: false && pf_disabled} %>
				<%= f.input :description, input_html: {disabled: false && pf_disabled} %>
		        
		        <% if params[:pf] %>
		        	<%= f.input :qty %>
			        <%= render partial: "/jobs/job_vice_files/nested_form", locals: {f: f} %>
				
					<% if true %>
			        	<%= f.input :approver, input_html: {disabled: true} %>
		        	<% else %>
				        <%= f.association :approver, collection: (User.all + (f.object.approver.nil? ? [] : [f.object.approver])).uniq.sort_by {|asso| asso.to_s}, value_method: :id, label_method: :to_s, input_html: {data: {placeholder: t(:choose)}} %>
				        <%= render partial: "/admin/users/chosen_select", locals: {object_name: :job_vice, no_create: true, select_id: :job_vice_approver_id} %>
			        <% end %>
		        <% end %>
	            
		  		<div class="col-md-6 col-md-offset-4">
		            <% if can?(:submit, @job_vice) %>
		                <%= f.button :button, value: :submit, class: "btn #{event_btn_class(:submit)} margin-right-10" do %>
		                    <%= event_icon_tag(:submit) %>
		                    <%= t("workflow.event.#{:submit}") %>
		                <% end %>
		            <% end if ["new", "create"].include?(action_name) %>
		            <% if can?(:save_change, @job_vice) %>
		                <%= f.button :button, value: :save_change, class: "btn #{event_btn_class(:save_change)} margin-right-10" do %>
		                    <%= event_icon_tag(:save_change) %>
		                    <%= t("workflow.event.#{:save_change}") %>
		                <% end %>
		            <% end if ["edit", "update"].include?(action_name) && (is_pd_range || (params[:pf] && is_pf_range)) %>
		            <% if can?(:terminate, @job_vice) %>
		                <%= f.button :button, value: :terminate, class: "btn #{event_btn_class(:terminate)} margin-right-10" do %>
		                    <%= event_icon_tag(:terminate) %>
		                    <%= t("workflow.event.#{:terminate}") %>
		                <% end %>
		            <% end if ["show"].include?(action_name) && (is_pd_range || (params[:pf] && is_pf_range)) %>
		        </div>
		  	</fieldset>
		<% end %>
  	</div>
</div>		

<% unless action_name == "show" %>
	<script type="text/javascript">

		 jQuery(function($) {
		 	
		 	$('#xxx_job_template_group_id').change(function(event){
		 		$.ajax({
	            	url: '<%= chose_job_template_group_jobs_job_vices_path %>',
	    			type: 'post',
	    			data: {job_template_group_id: $(this).val()},
	                dataType: 'script'
	            });
	        });
		 	
		 	$('#job_vice_job_template_id').change(function(event){
		 		$.ajax({
	            	url: '<%= chose_job_template_jobs_job_vices_path %>',
	    			type: 'post',
	    			data: {job_template_id: $(this).val()},
	                dataType: 'script'
	            });
	        });
	        
		 });
		 
	</script>
<% end %>