<% @form_defaults = {input_html: {autocomplete: :off}} %>
<% @form_defaults[:disabled] = (action_name == "show") || (@user.respond_to?(:current_state) && @user.current_state.meta[:disabled]) %>
<div data-widget-editbutton="false" id="power-forms-grid" class="powerwidget cold-grey" role="widget">
	<div class="inner-spacer" role="content">

		<%= simple_form_for(["admin", @user], html: {class: 'form-horizontal'}, defaults: @form_defaults) do |f| %>
			<%= render partial: "/form_actions_top", locals: {
	            resource_class: User, resource: @user, f: f,
	            resources_url: admin_users_path(q: params[:q], page: params[:page]),
	            resource_url: @user.new_record? ? nil : admin_user_path(@user, q: params[:q], page: params[:page]),
	            edit_resource_url: @user.new_record? ? nil : edit_admin_user_path(@user, q: params[:q], page: params[:page])
	        } unless params[:modal] %>
	        
        	<% params[:q].each do |k,v| %>
		        <%= hidden_field_tag "q[#{k}]", v %>
		    <% end unless params[:q].blank? %>
		    <%= hidden_field_tag(:page, params[:page]) unless params[:page].blank? %>
			
		  	<fieldset>
				<%= f.input :avatar, as: :attachment_custom %>
				<%= f.input :username %>
				<%= f.input :email %>
				<%= f.input :password %>
				<%= f.input :password_confirmation %>
				
				<%= f.input :pid %>
				<%= f.input :prefix %>
				<%= f.input :firstname %>
				<%= f.input :lastname %>

				<%= f.association :employee_type, collection: (EmployeeType.all + (f.object.employee_type.nil? ? [] : [f.object.employee_type])).uniq.sort_by {|s| s.to_s}, value_method: :id, label_method: :to_s, input_html: {"data-placeholder" => t(:choose)} %>
		        <%= render partial: "/settings/employee_types/chosen_select", locals: {object_name: :user} %>
				<%= f.association :position, collection: (Position.all + (f.object.position.nil? ? [] : [f.object.position])).uniq.sort_by {|s| s.to_s}, value_method: :id, label_method: :to_s, input_html: {"data-placeholder" => t(:choose)} %>
		        <%= render partial: "/settings/positions/chosen_select", locals: {object_name: :user} %>
				
				<div class="hide">
				<%= f.association :user_group, collection: (UserGroup.all + (f.object.user_group.nil? ? [] : [f.object.user_group])).uniq.sort_by {|s| s.to_s}, value_method: :id, label_method: :to_s, input_html: {"data-placeholder" => t(:choose)} %>
		        <%= render partial: "/admin/user_groups/chosen_select", locals: {object_name: :user} %>
		        </div>
		        <%= f.input :theme, collection: User::THEMES, input_html: {class: 'chosen-select form-control', "data-placeholder" => t(:choose)} %>
		        <%= f.input :locale, collection: $LOCALES, input_html: {class: 'chosen-select form-control', "data-placeholder" => t(:choose)} %>
		        <%= f.input :timezone, collection: ActiveSupport::TimeZone::MAPPING.collect {|tz| [ActiveSupport::TimeZone.create(tz[0]), tz[0]]}.sort_by {|tz| [tz[0]]}, input_html: {class: 'form-control chosen-select', "data-placeholder" => t(:choose)} %>
	            
	            <div class="form-group <%= 'hide' unless current_user.authorized_as?(:systemadmin) || current_user.authorized_as?(:ibattz) %>">
	                <label for="user_roles_mask" class="control-label col-md-4"><%= User.human_attribute_name :roles %></label>
	                <div class="col-md-6">
	                    <div id="roles-toggle" data-toggle="buttons">
	                    	<% 
	                    		roles = User.valid_roles
								roles -= [:ibattz] unless current_user.authorized_as?(:ibattz)
	                    	%>
		                	<% unless action_name == "show" %>
		                        <% roles.sort_by {|r| r.to_s}.each do |r|%>
		                            <span class="btn btn-sm <%= (@user.has_role? r) ? "btn-primary active" : "btn-default"%> <%= 'disabled' if action_name == 'show' %>" type="button" style="margin-bottom:5px;"> 
		                                <%= check_box_tag "user[roles][]", r, (@user.has_role? r) %>
		                                <%= t r %>
		                            </span>
		                        <% end %>
		                    <% else %>
		                        <% roles.sort_by {|r| r.to_s}.each do |r|%>
		                            <span class="btn btn-sm <%= (@user.has_role? r) ? "btn-primary active" : "btn-default"%> <%= 'disabled' if action_name == 'show' %>" type="button" style="margin-bottom:5px;"> 
		                                <%= check_box_tag "user[roles][]", r %>
	                                	<%= t r %>
		                            </span>
		                        <% end %>
		                    <% end %>
	                    </div>
	                </div>
	            </div>
	            
		  		<div class="col-md-6 col-md-offset-4">
			        <%= render partial: "/form_actions_bottom", locals: {
			            resource_class: User, resource: @user, f: f,
			            resources_url: admin_users_path(q: params[:q], page: params[:page]),
			            resource_url: @user.new_record? ? nil : admin_user_path(@user, q: params[:q], page: params[:page]),
			            edit_resource_url: @user.new_record? ? nil : edit_admin_user_path(@user, q: params[:q], page: params[:page]),
			        } %>
		        </div>
		  	</fieldset>
		<% end %>
  	</div>
</div>		

<% unless action_name == "show" %>
	<script>     
	    $('#roles-toggle span').on('click' , function(){
            if( $(this).hasClass('active')){
                $(this).removeClass('btn-primary');
            	$(this).addClass('btn-default');
			}else{
	            $(this).addClass('btn-primary');
                $(this).removeClass('btn-default');
            }
	    });
	</script>
<% end %>
