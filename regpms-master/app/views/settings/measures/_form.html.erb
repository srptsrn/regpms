<% @form_defaults = {input_html: {autocomplete: :off}} %>
<% @form_defaults[:disabled] = (action_name == "show") || (@measure.respond_to?(:current_state) && @measure.current_state.meta[:disabled]) %>
<div data-widget-editbutton="false" id="power-forms-grid" class="powerwidget cold-grey" role="widget">
	<div class="inner-spacer" role="content">

		<%= simple_form_for(["settings", @measure], html: {class: 'form-horizontal'}, defaults: @form_defaults) do |f| %>
	    	<% params[:q].each do |k,v| %>
		        <%= hidden_field_tag "q[#{k}]", v %>
		    <% end unless params[:q].blank? %>
		    <%= hidden_field_tag(:page, params[:page]) unless params[:page].blank? %>
		    
	        <%= render partial: "/form_actions_top", locals: {
	            resource_class: Measure, resource: @measure, f: f,
	            resources_url: settings_measures_path(q: params[:q], page: params[:page]),
	            resource_url: @measure.new_record? ? nil : settings_measure_path(@measure, q: params[:q], page: params[:page]),
	            edit_resource_url: @measure.new_record? ? nil : edit_settings_measure_path(@measure, q: params[:q], page: params[:page])
	        } unless params[:modal] %>

		  	<fieldset>

		        <%= f.input :strategy_group_id, label: Measure.human_attribute_name(:strategy_group), collection: (StrategyGroup.all_enabled + (f.object.strategy_group.nil? ? [] : [f.object.strategy_group])).uniq.sort_by {|asso| asso.to_s}, value_method: :id, label_method: :to_s, input_html: {class: "chosen-select", data: {placeholder: t(:choose)}} %>
		        
		        <% strategies = f.object.strategy_group ? f.object.strategy_group.strategies : [] %>
		        <%= f.input :strategy_id, label: Measure.human_attribute_name(:strategy), collection: (strategies + (f.object.strategy.nil? ? [] : [f.object.strategy])).uniq.sort_by {|asso| asso.to_s_with_year}, value_method: :id, label_method: :to_s_with_year, input_html: {class: "chosen-select", data: {placeholder: t(:choose)}} %>

		        <% tactics = f.object.strategy ? f.object.strategy.tactics : [] %>
		        <%= f.association :tactic, collection: (tactics + (f.object.tactic.nil? ? [] : [f.object.tactic])).uniq.sort_by {|asso| asso.to_s}, value_method: :id, label_method: :to_s, input_html: {data: {placeholder: t(:choose)}} %>
		        <%= render partial: "/settings/tactics/chosen_select", locals: {object_name: :measure, no_create: true} %>
	        	
	        	<%= f.input :no %>
	        	<%= f.input :name %>
	            
		  		<div class="col-md-6 col-md-offset-4">
			        <%= render partial: "/form_actions_bottom", locals: {
			            resource_class: Measure, resource: @measure, f: f,
			            resources_url: settings_measures_path(q: params[:q], page: params[:page]),
			            resource_url: @measure.new_record? ? nil : settings_measure_path(@measure, q: params[:q], page: params[:page]),
			            edit_resource_url: @measure.new_record? ? nil : edit_settings_measure_path(@measure, q: params[:q], page: params[:page])
			        } %>
		        </div>
		  	</fieldset>
		<% end %>
			
		<script type="text/javascript">
			jQuery(function($) {
				$('#measure_strategy_group_id').change(function(event){
					$.ajax({
						url: '<%= chose_strategy_group_settings_measures_path %>',
						type: 'post',
						data: {strategy_group_id: $(this).val()},
						dataType: 'script'
		    		});
				});
				$('#measure_strategy_id').change(function(event){
					$.ajax({
						url: '<%= chose_strategy_settings_measures_path %>',
						type: 'post',
						data: {strategy_id: $(this).val()},
						dataType: 'script'
		    		});
				});
			});
		</script>
  	</div>
</div>		
